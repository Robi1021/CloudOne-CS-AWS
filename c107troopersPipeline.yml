# This file is (re-) generated by code.
# Any manual changes will be overwritten.
---
AWSTemplateFormatVersion: 2010-09-09
Description: pipeline for c107troopers

Parameters:

  CodeCommitRepoName:
    Type: String
    Description: The project name, also the CodeCommit Repository name
    Default: 'c107troopers'
    MinLength: 1
    MaxLength: 100

  DockerhubUsername:
    Type: String
    Description: Your DockerHub username
    Default: 'cvdabbeele'
    MinLength: 1
    MaxLength: 100

  DockerhubPassword:
    Type: String
    Description: Your DockerHub Password
    Default: 'Intern0t!'
    MinLength: 1
    MaxLength: 100

  EcrRepoName:
    Type: String
    Description: The name of the ECR Repository
    Default: 'c107troopers'
    MinLength: 1
    MaxLength: 100

  SmartcheckHost:
    Type: String
    Description: Smartcheck host URL
    Default: 'afef2c9388ce74f4e9fb42fb2697bb66-906099667.eu-central-1.elb.amazonaws.com'
    MinLength: 1
    MaxLength: 500
    ConstraintDescription: You must enter a Smartcheck host URL

  SmartcheckUser:
    Type: String
    Default: 'administrator'
    Description: The user for Smartcheck
    MinLength: 1
    MaxLength: 100

  SmartcheckPwd:
    Type: String
    NoEcho: true
    Description: The password for Smartcheck user
    Default: 'Tr3ndm1cr0!'
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a password for the Smartcheck user

  PreregistryHost:
    Type: String
    Description: Smartcheck host URL
    Default: 'afef2c9388ce74f4e9fb42fb2697bb66-906099667.eu-central-1.elb.amazonaws.com'
    MinLength: 1
    MaxLength: 500
    ConstraintDescription: You must enter a Smartcheck host URL

  PreregistryUser:
    Type: String
    Description: The user for Pre-Registry
    Default: 'administrator'
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a user for the Pre-Registry

  PreregistryPwd:
    Type: String
    Description: The password for Pre-Registry user
    Default: 'Tr3ndm1cr0!'
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a password for the Pre-Registry user

  KubectlRoleName:
    Type: String
    Description: The Role for the deployments on EKS
    Default: 'c107EksClusterCodeBuildKubectlRole'
    MinLength: 1
    MaxLength: 500
    ConstraintDescription: Do not change this

  EksClusterName:
    Type: String
    Description: The name of the EKS cluster
    Default: 'c107'
    MinLength: 1
    MaxLength: 50
    ConstraintDescription: Do not change this

  AppSecKey:
    Type: String
    Description: The registration key for Cloud One Application Security
    Default: 'f0937945-f020-4d00-ac3c-c14c5eb79072'
    MinLength: 1
    MaxLength: 50
    ConstraintDescription: Do not change this

  AppSecSecret:
    Type: String
    Description: The registration secret for Cloud One Application Security
    Default: '9ba4affe-94a9-4bdd-8bd2-0d2d862aa8e5'
    MinLength: 1
    MaxLength: 50
    ConstraintDescription: Do not change this

  AwsAccessKey:
      Type: String
      Description: The AWS access key for SmartCheck to retrieve the images from ECR
      Default: ''
      MinLength: 1
      MaxLength: 50
      ConstraintDescription: Do not change this

  AwsSecretAccessKey:
        Type: String
        Description: The AWS secret access key for SmartCheck to retrieve the images from ECR
        Default: ''
        MinLength: 1
        MaxLength: 50
        ConstraintDescription: Do not change this
        
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS
        Parameters:
          - CodeCommitRepoName
          - EcrRepoName
      - Label:
          default: DeepSecurity/Smartcheck
        Parameters:
          - SmartcheckHost
          - SmartcheckUser
          - SmartcheckPwd
          - PreregistryHost
          - PreregistryUser
          - PreregistryPwd
          - KubectlRoleName
          - EksClusterName
          - AppSecKey
          - AppSecSecret
          - AwsAccessKey
          - AwsSecretAccessKey
          - DockerhubUsername
          - DockerhubPassword


    ParameterLabels:
      CodeCommitRepoName:
        default: CodeCommit Repositry Name (Project Name)
      DockerhubUsername:
        default: Your Dokerhub Username
      DockerhubPassword:
        default: Your Dokerhub Password
      EcrRepoName:
        default: ECR Repository Name
      SmartcheckHost:
        default: Smartcheck Host URL
      SmartcheckUser:
        default: Smartcheck User
      SmartcheckPwd:
        default: Smartcheck Password
      PreregistryHost:
        default: Pre-registry Host URL
      PreregistryUser:
        default: Pre-registry User
      PreregistryPwd:
        default: Pre-registry Password
      KubectlRoleName:
        default: Kubectl IAM role
      EksClusterName:
        default: EKS cluster name
      AppSecKey:
        default: Application Security Key
      AppSecSecret:
        default: Application Security Secret
      AwsAccesskey:
        default: AWS_ACCESS_KEY_ID
      AwsSecretAccessKey:
        default: AWS_SECRET_ACCESS_KEY
Resources:
  EcrDockerRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref EcrRepoName
    DeletionPolicy: Retain

  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: codepipeline-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !GetAtt CodeCommitRepo.Arn
                Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
              - Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${PreScanBuildc107troopers}
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGetProjects
                  - codebuild:BatchGetBuilds
                  - codebuild:ListBuildsForProject
              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
    DependsOn: CodePipelineArtifactBucket

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${KubectlRoleName}
                Effect: Allow
                Action:
                  - sts:AssumeRole
              - Resource: '*'
                Effect: Allow
                Action:
                  - eks:Describe*
              - Resource: '*'
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: '*'
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
              - Resource: '*'
                Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterfacePermission
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrDockerRepository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Code Repository for the DevSecOps sample
      RepositoryName: !Ref CodeCommitRepoName
      #Code:
      #  BranchName: main

  PreScanBuildc107troopers:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/docker:17.09.0
        EnvironmentVariables:
          - Name: DOCKERHUB_USERNAME
            Value: !Ref DockerhubUsername
          - Name: DOCKERHUB_PASSWORD
            Value: !Ref DockerhubPassword
          - Name: PRE_SCAN_REPOSITORY
            Value: !Ref PreregistryHost
          - Name: PRE_SCAN_USER
            Value: !Ref PreregistryUser
          - Name: PRE_SCAN_PWD
            Value: !Ref PreregistryPwd
          - Name: SMARTCHECK_HOST
            Value: !Ref SmartcheckHost
          - Name: SMARTCHECK_USER
            Value: !Ref SmartcheckUser
          - Name: SMARTCHECK_PWD
            Value: !Ref SmartcheckPwd
          - Name: EKS_KUBECTL_ROLE_ARN
            Value: !Sub arn:aws:iam::${AWS::AccountId}:role/${KubectlRoleName}
          - Name: EKS_CLUSTER_NAME
            Value: !Sub c107
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.eu-central-1.amazonaws.com/${EcrDockerRepository}
          - Name: APPSEC_KEY
            Value: !Ref AppSecKey
          - Name: APPSEC_SECRET
            Value: !Ref AppSecSecret
          - Name: AwsAccessKey
            Value: !Ref AwsAccessKey
          - Name: AwsSecretAccessKey
            Value: !Ref AwsSecretAccessKey

      Name: PreScanBuildc107troopers
      Description: Pre-scan container image with Smartcheck and push to registry
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn

  CodePipelineDevSecOps:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Sample-App
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt CodeCommitRepo.Name
                BranchName: master
              OutputArtifacts:
                - Name: Sample-App
              RunOrder: 1
        - Name: BuildAndScan
          Actions:
            - Name: BuildAndScan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PreScanBuildc107troopers
              InputArtifacts:
                - Name: Sample-App
              OutputArtifacts:
                - Name: PreScanOutput
              RunOrder: 1
